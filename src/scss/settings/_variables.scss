@use "sass:math";

/*===============================================
  デザイン方式切り替え
  liquid | solid | mobile
===============================================*/
$design-root: liquid !default;

/*===============================================
  デザイン幅（カンプサイズなど）
===============================================*/
$design-lg-width: 1200;   // PC用
$design-md-width: 960;    // タブレット用
$design-sm-width: 560;    // スマホ用
$design-mobile-width: 560; // モバイルファーストデザインで使用

/*===============================================
　ブレークポイント
===============================================*/
$breakpoints: (
  sm: 560px,  // スマホ用
  md: 960px,  // タブレット用
  lg: 1200px  // PC用
);

/*===============================================
  px値をrem or pxに変換する関数
===============================================*/
@function size($px) {
  @if $design-root == liquid {
    // Liquidデザイン → rem換算（1rem = 10px）
    @return math.div($px, 10px) * 1rem;
  } @else {
    // Solid / Mobileデザイン → px固定
    @return $px;
  }
}

/*===============================================
  フォントサイズ
===============================================*/
// カンプ値をpxで入力（出力時にrem/px変換）
$font-size-base: 16px; // 基本文字サイズ

/*===============================================
  行間・字間
===============================================*/
$line-height-base: 1.6;      // 行間は比率で管理するのでそのまま
$letter-spacing-base: 0.05em; // 字間はem管理でOK

/*===============================================
  スペーシング（余白）
===============================================*/
// カンプ値をpxで入力（出力時にrem/px変換）
$spacing-xs: size(4);
$spacing-sm: size(8);
$spacing-md: size(16);
$spacing-lg: size(32);
$spacing-xl: size(80);

/*===============================================
  コンポーネント高さ
===============================================*/
// ヘッダーの高さ（カンプ80px基準）
$header-height: size(80);

/*===============================================
  カラー
===============================================*/
$color-text: #222;
$color-bg: #fff;
$color-primary: #0070f3;
$color-secondary: #ff4081;